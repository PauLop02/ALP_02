#include <stdio.h>  // Incluí la biblioteca estándar de entrada/salida.
#include "pico/stdlib.h"  // Incluí la biblioteca estándar de la Raspberry Pi Pico.
#include "hardware/i2c.h"  // Incluí la biblioteca para el uso del protocolo I2C en el hardware.

// Definí constantes para el puerto I2C, la dirección del OLED y sus dimensiones.
#define I2C_PORT i2c0
#define OLED_ADDR 0x3C
#define OLED_WIDTH 128
#define OLED_HEIGHT 64

// Definí constantes para identificar comandos y datos del OLED.
#define OLED_CMD 0x00
#define OLED_DATA 0x40

// Definí límites para los caracteres y las dimensiones de la fuente.
#define LOCHAR 48              
#define HICHAR 90              
#define FONT_BWIDTH 1           
#define FONT_HEIGHT 8           

// Creé una matriz de patrones de bits para representar los caracteres en la pantalla OLED.
const char FONT[HICHAR-LOCHAR+1][FONT_HEIGHT*FONT_BWIDTH] = {
{ 0x7C,0xFE,0xE2,0xB2,0x9A,0xFE,0x7C,0x00 },
{ 0x80,0x84,0xFE,0xFE,0x80,0x80,0x00,0x00 },
{ 0xC4,0xE6,0xB2,0x92,0x9E,0xCC,0x00,0x00 },
{ 0x44,0xC6,0x92,0x92,0xFE,0x6C,0x00,0x00 },
{ 0x30,0x38,0x2C,0xA6,0xFE,0xFE,0xA0,0x00 },
{ 0x4E,0xCE,0x8A,0x8A,0xFA,0x72,0x00,0x00 },
{ 0x78,0xFC,0x96,0x92,0xF2,0x60,0x00,0x00 },
{ 0x06,0x06,0xE2,0xF2,0x1E,0x0E,0x00,0x00 },
{ 0x6C,0xFE,0x92,0x92,0xFE,0x6C,0x00,0x00 },
{ 0x0C,0x9E,0x92,0xD2,0x7E,0x3C,0x00,0x00 },
{ 0x00,0x00,0xCC,0xCC,0x00,0x00,0x00,0x00 },
{ 0x00,0x80,0xEC,0x6C,0x00,0x00,0x00,0x00 },
{ 0x10,0x38,0x6C,0xC6,0x82,0x00,0x00,0x00 },
{ 0x48,0x48,0x48,0x48,0x48,0x48,0x00,0x00 },
{ 0x00,0x82,0xC6,0x6C,0x38,0x10,0x00,0x00 },
{ 0x04,0x06,0xA2,0xB2,0x1E,0x0C,0x00,0x00 },
{ 0x7C,0xFE,0x82,0xBA,0xBA,0x3E,0x3C,0x00 },
{ 0xF8,0xFC,0x26,0x26,0xFC,0xF8,0x00,0x00 },
{ 0x82,0xFE,0xFE,0x92,0x92,0xFE,0x6C,0x00 },
{ 0x38,0x7C,0xC6,0x82,0x82,0xC6,0x44,0x00 },
{ 0x82,0xFE,0xFE,0x82,0xC6,0x7C,0x38,0x00 },
{ 0x82,0xFE,0xFE,0x92,0xBA,0x82,0xC6,0x00 },
{ 0x82,0xFE,0xFE,0x92,0x3A,0x02,0x06,0x00 },
{ 0x38,0x7C,0xC6,0x82,0xA2,0xE6,0xE4,0x00 },
{ 0xFE,0xFE,0x10,0x10,0xFE,0xFE,0x00,0x00 },
{ 0x00,0x82,0xFE,0xFE,0x82,0x00,0x00,0x00 },
{ 0x60,0xE0,0x80,0x82,0xFE,0x7E,0x02,0x00 },
{ 0x82,0xFE,0xFE,0x10,0x38,0xEE,0xC6,0x00 },
{ 0x82,0xFE,0xFE,0x82,0x80,0xC0,0xE0,0x00 },
{ 0xFE,0xFE,0x1C,0x38,0x1C,0xFE,0xFE,0x00 },
{ 0xFE,0xFE,0x0C,0x18,0x30,0xFE,0xFE,0x00 },
{ 0x38,0x7C,0xC6,0x82,0xC6,0x7C,0x38,0x00 },
{ 0x82,0xFE,0xFE,0x92,0x12,0x1E,0x0C,0x00 },
{ 0x3C,0x7E,0x42,0xE2,0xFE,0xBC,0x00,0x00 },
{ 0x82,0xFE,0xFE,0x12,0x32,0xFE,0xCC,0x00 },
{ 0x44,0xCE,0x9A,0xB2,0xE6,0x44,0x00,0x00 },
{ 0x06,0x82,0xFE,0xFE,0x82,0x06,0x00,0x00 },
{ 0xFE,0xFE,0x80,0x80,0xFE,0xFE,0x00,0x00 },
{ 0x3E,0x7E,0xC0,0xC0,0x7E,0x3E,0x00,0x00 },
{ 0xFE,0xFE,0x60,0x30,0x60,0xFE,0xFE,0x00 },
{ 0x86,0xCE,0x78,0x30,0x78,0xCE,0x86,0x00 },
{ 0x0E,0x9E,0xF0,0xF0,0x9E,0x0E,0x00,0x00 },
{ 0x8E,0xC6,0xE2,0xB2,0x9A,0xCE,0xE6,0x00 },
};

// Inicialicé el puerto I2C para el OLED
void iniciar_i2c_oled() {
    i2c_init(I2C_PORT, 400 * 1000);  // Inicialicé el puerto I2C a 400 kHz.
    gpio_set_function(4, GPIO_FUNC_I2C);  // Configuré el pin GPIO 4 como I2C.
    gpio_set_function(5, GPIO_FUNC_I2C);  // Configuré el pin GPIO 5 como I2C.
    gpio_pull_up(4);  // Activé la resistencia pull-up en el pin 4.
    gpio_pull_up(5);  // Activé la resistencia pull-up en el pin 5.
}

// Envié un comando al OLED
void enviar_comando_oled(uint8_t cmd) {
    uint8_t data[2] = {OLED_CMD, cmd};  // Creé un arreglo de datos con el comando.
    i2c_write_blocking(I2C_PORT, OLED_ADDR, data, 2, false);  // Envié el comando al OLED.
}

// Inicialicé el OLED
void iniciar_oled() {
    uint8_t secuencia_inicial[] = {0xAE, 0x20, 0x00, 0xB0, 0xC8, 0x00, 0x10, 0x40, 0x81, 0xFF, 
                                   0xA1, 0xA6, 0xA8, 0x3F, 0xA4, 0xD3, 0x00, 0xD5, 0xF0, 0xD9, 
                                   0x22, 0xDA, 0x12, 0xDB, 0x20, 0x8D, 0x14, 0xAF};  // Definí la secuencia de inicialización del OLED.
    for (int i = 0; i < sizeof(secuencia_inicial); i++) {
        enviar_comando_oled(secuencia_inicial[i]);  // Envié los comandos de la secuencia al OLED.
    }
}

// Limpié la pantalla OLED
void limpiar_pantalla_oled() {
    for (int pagina = 0; pagina < 8; pagina++) {
        enviar_comando_oled(0xB0 + pagina);  // Seleccioné la página en el OLED.
        enviar_comando_oled(0x00);  // Establecí la columna baja en 0.
        enviar_comando_oled(0x10);  // Establecí la columna alta en 0.
        for (int col = 0; col < OLED_WIDTH; col++) {
            uint8_t data[2] = {OLED_DATA, 0x00};  // Definí un byte de datos en 0 para borrar la columna.
            i2c_write_blocking(I2C_PORT, OLED_ADDR, data, 2, false);  // Envié el dato para limpiar la columna.
        }
    }
}

// Dibujé un carácter en una posición específica del OLED
void dibujar_caracter_oled(uint8_t pagina, uint8_t col, char c) {
    int indice_caracter = c - LOCHAR;  // Calculé el índice del carácter en la matriz FONT.
    if (indice_caracter < 0 || indice_caracter > (HICHAR - LOCHAR)) {
        return;  // Evité dibujar caracteres fuera de rango.
    }
    enviar_comando_oled(0xB0 + pagina);  // Seleccioné la página de inicio.
    enviar_comando_oled(0x00 + (col & 0x0F));  // Envié la columna baja.
    enviar_comando_oled(0x10 + (col >> 4));  // Envié la columna alta.
    for (int i = 0; i < 8; i++) {
        uint8_t data[2] = {OLED_DATA, FONT[indice_caracter][i]};  // Obtuve los datos del carácter.
        i2c_write_blocking(I2C_PORT, OLED_ADDR, data, 2, false);  // Envié los datos al OLED.
    }
}

// Dibujé una cadena de texto en una posición específica del OLED
void dibujar_texto_oled(uint8_t pagina, uint8_t inicio_col, const char* texto) {
    for (int i = 0; texto[i] != '\0'; i++) {
        dibujar_caracter_oled(pagina, inicio_col + (i * FONT_BWIDTH * 8), texto[i]);  // Dibujé caracteres consecutivos.
    }
}

int main() {
    stdio_init_all();  // Inicialicé la entrada/salida estándar.
    iniciar_i2c_oled();  // Inicialicé el puerto I2C para el OLED.
    iniciar_oled();  // Inicialicé el OLED con los comandos requeridos.
    limpiar_pantalla_oled();  // Limpié la pantalla OLED.

    dibujar_texto_oled(0, 0, "PAULINA ALDANA");  //  "PAULINA ALDANA" en la primera línea.
    dibujar_texto_oled(1, 0, "LOPEZ <3");   //  "LOPEZ <3" en la segunda línea.

    return 0;
}
